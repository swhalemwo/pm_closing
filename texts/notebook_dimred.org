#+PROPERTY: header-args:R :session *R:dimred*
#+PROPERTY: header-args:R+ :output-dir /home/johannes/Dropbox/phd/papers/closing/notes/dimred/
#+PROPERTY: header-args:R+ :tangle yes
#+PROPERTY: header-args:R+ :cache no

#+PROPERTY: header-args:dot+ :output-dir /home/johannes/Dropbox/phd/papers/closing/notes/dimred/

#+latex_class: notes2
# erases make title
# #+BIND: org-export-latex-title-command ""

# fucks all the maketitlestuff just to be sure
#+OPTIONS: num:nil
#+OPTIONS: toc:nil
#+OPTIONS: h:5
#+OPTIONS: ^:nil # don't use subscript for underscore
#+options: \n:t # preserver linebreaks

* dimensionality reduction notebook
:PROPERTIES:
:ID:       61593c59-cb66-48e6-b019-07bf29a2d980
:END:

*overall goal*: get some size indicator, or whatever else is measured by the museum characteristics we measure in the database

*problem*: for closed museums, data collection (research assistants looking at websites) might have been more difficult because website is offline/was no longer maitained

therefore, measurement of museum-level variables might be influenced by museum_status (open or closed), which constitutes "reverse causality" or "Missing at random" (missingness of a variable (museum characteristics) depending on the value of another variable (museum_status)).



#+name: p_revcaus
#+begin_src dot :exports results :results output graphics file :file p_revcaus.pdf :width 6 :height 5.5

digraph D {
  
  node [shape="box"];
  rankdir = "RL";
  // ranksep = 0.2;
  // ratio = "auto";
  // ratio = 1;
  S [label = "museum status\n(open/closed)"]
  C [label = "completeness\nof website"]
  D [label = "data\n coverage"]
  V [label = "museum-level\nvariables"]
  
  V -> S [label="\n\neffect of\ninterest"]
  S -> C -> D -> V [color = "red"]

}
#+end_src

#+attr_latex: :width 6in
#+RESULTS: p_revcaus
[[file:/home/johannes/Dropbox/phd/papers/closing/notes/dimred/p_revcaus.pdf]]


[[file:/home/johannes/Dropbox/phd/papers/closing/notes/dimred/p_revcaus.pdf]]





** PCA

#+begin_src R :exports none
library(pmdata)
library(jtls)
library(patchwork) # combining complex plots
library(purrr) # looping
library(ggrepel) # plotting 
library(collapse) # data processing
library(ggbeeswarm) # for vrblcvrg plots
library(countrycode) # for getting gd_af_size to work
library(wpp2022) # import UN population data for taiwan
data(pop1dt) # actually import Un pop data
library(furrr) # parallel processing
library(survival) # survival models
library(Hmisc, include.only = "latexTranslate") # needed for reg table
library(khroma) # for tol color scheme

c_dirs <- gc_dirs(dir_proj = "/home/johannes/Dropbox/phd/papers/closing/") ## project dirs
PMDATA_LOCS <- gc_pmdata_locs()

dt_pmdb_excl <- gd_pmdb_excl(only_pms = F) %>%
    .[museum_status %in% c("private museum", "closed")] # yeet bad PMs
dt_pmdb <- gd_pmdb(dt_pmdb_excl, verbose = T)

START_YEAR <- 2000
END_YEAR <- 2021


source(paste0(c_dirs$code, "cfg.R"))
source(paste0(c_dirs$code, "vrblcvrg.R"))
source(paste0(c_dirs$code, "regression.R"))
source(paste0(c_dirs$code, "pm_dimred.R"))


#+end_src

#+RESULTS[f49e3a89067db8c9784680cad4ac08dd28364ebc]:


#+begin_src R :results none :exports none
l_pca_dimred <- gl_pca_dimred(dt_pmdb)
l_pca_dimred_woclosed <- gl_pca_dimred(dt_pmdb[museum_status != "closed"])


## predict scores for closed ones
dt_pca_scores_closed_imputed <- gd_pca_score(dt_pmdb[museum_status == "closed"], l_pca_dimred_woclosed$prcomp_obj,
             l_pca_dimred_woclosed$rotatedLoadings)


## assign imputed scores for closed PMs back to to l_pca result
l_pca_dimred_woclosed$dt_scores <- rbind(
    l_pca_dimred_woclosed$dt_scores,
    cbind(dt_pca_scores_closed_imputed, dt_pmdb[museum_status == "closed", .(ID, name, museum_status, iso3c)]))

#+end_src






#+name: p_vrblcvrg_pca
#+begin_src R :exports results :results output graphics file :file p_vrblcvrg_pca.pdf :width 6 :height 5.5
gp_vrblcvrg_pca(dt_pmdb, l_pca_dimred)
#+end_src

#+attr_latex: :width 6in
#+RESULTS[badad757365a60f680475022e66003ff96b297c4]: p_vrblcvrg_pca
[[file:/home/johannes/Dropbox/phd/papers/closing/notes/dimred/p_vrblcvrg_pca.pdf]]

additional (minor) problem: many interval variables are incomplete -> only use variables for which 0 can reasonably be inferred to mean absence (e.g. if e.g. wealth is missing, it's not plausible to assume 0 wealth, but if there is no data on e.g. cafe/restaurant, it's possible that there just is no cafe).

coverage of variables used for PCA is worse for closed museum by factor of around exp(1) = 2.8.


#+name: p_scree
#+begin_src R :exports results :results output graphics file :file p_scree.pdf :width 5.5 :height 4
gp_scree(l_pca_dimred$eigenvalues)
#+end_src

#+attr_latex: :width 5.5in
#+RESULTS[62de51220879dbfc11f1974c7ddf6a21820f142e]: p_scree
[[file:/home/johannes/Dropbox/phd/papers/closing/notes/dimred/p_scree.pdf]]

Scree plot: maybe just one PC worth extracting, but just use two because that's standard

#+name: p_pca_loadings
#+begin_src R :exports results :results output graphics file :file p_pca_loadings.pdf :width 5.5 :height 4.5
gp_pca_loadings(l_pca_dimred)
#+end_src

#+attr_latex: :width 5.5in
#+RESULTS[5a97cd7f6d0c35799df832e2ff5741f4efe932b2]: p_pca_loadings
[[file:/home/johannes/Dropbox/phd/papers/closing/notes/dimred/p_pca_loadings.pdf]]




** look at stability if only open museums are used for principal component construction

could be that inclusion of closed museums in PCA drives factor loadings to reflect museum_status, therefore sees if loadings change when closed museums are exlcuded

woclosed (without closed): PCA loadings are calculated only with open museums, then scores for closed museums are calculated from those loadings


#+name: p_cpr_loads_scatter
#+begin_src R :exports results :results output graphics file :file p_cpr_loads_scatter.pdf :width 14 :height 8
## compare loadings

## reshaping fun https://cran.r-project.org/web/packages/data.table/vignettes/datatable-reshape.html
## value.name keyword

dt_pca_cpr_loads <- map2(list(l_pca_dimred, l_pca_dimred_woclosed), list("all", "woclosed"),
     ~chuck(.x, "rotatedLoadings")[, 1:2] %>% adt(keep.rownames = "vrbl") %>% .[, src := .y]) %>%
    rbindlist %>% dcast(vrbl ~ src, value.var  = c("PC1", "PC2")) 

## compare loadings plot 1

dt_pca_cpr_loads %>% melt(id.vars = "vrbl", measure.vars = measure(value.name, src, sep = "_")) %>%
    .[src == "woclosed", `:=`(PC1 = PC1 * -1, PC2 = PC2 * -1)] %>% # align PCs (get twisted sometimes/how)
    ggplot(aes(x=PC1, y=PC2, label = vrbl, color = src)) +
    geom_point() +  geom_text_repel(show.legend = F, size = 5) + 
    geom_segment(dt_pca_cpr_loads, mapping = aes(x=PC1_all, y=PC2_all, xend = PC1_woclosed*-1,
                                                 yend = PC2_woclosed*-1), color = "black")


#+end_src

#+attr_latex: :width 16cm
#+RESULTS[55d1ce72cab0453d2aee29ec3255965c860bce8d]: p_cpr_loads_scatter
[[file:/home/johannes/Dropbox/phd/papers/closing/notes/dimred/p_cpr_loads_scatter.pdf]]

#+name: p_cpr_loads_cols
#+begin_src R :exports results :results output graphics file :file p_cpr_loads_cols.pdf :width 7 :height 5
## compare loadings plot2
dt_pca_cpr_loads %>% melt(id.vars = "vrbl", measure.vars = measure(PC, src, sep = "_")) %>%
    .[src == "woclosed", value := value *-1] %>% 
    ggplot(aes(x=value, y=vrbl, fill = src)) + geom_col(position = position_dodge()) +
    facet_grid(~PC)
#+end_src

#+attr_latex: width 7in
#+RESULTS[dd768b34bc37cd138e1da6716d310b62b3096b90]: p_cpr_loads_cols
[[file:/home/johannes/Dropbox/phd/papers/closing/notes/dimred/p_cpr_loads_cols.pdf]]

-> not a big difference between factor loadings with all museums (all) and without closed (woclosed, i.e. only open museums)

look at correlations of loadings: 

#+begin_src R :exports results :results output
dt_pca_cpr_loads[, .SD, .SDcols = patterns("^PC")] %>% cor %>%
  multiply_by(lower.tri(.)) %>% # only keep one side
  adt(keep.rownames = "PC") %>%
  melt(id.vars = "PC", measure.vars = measure(PC_cpr, src_cpr, sep = "_"), value.name = "cor") %>% 
  .[cor != 0] %>% 
  .[, c("PC_org", "src_org") := tstrsplit(PC, "_")] %>%
  .[PC_org == PC_cpr & src_org != src_cpr, .(PC_cpr, src_cpr, src_org, cor = round(cor, 3))]
  #+end_src

  #+RESULTS[5be7423ba45ebb25dbdf52f43fbd4f1eab2c8c94]:
  : # A data frame: 2 × 4
  :   PC_cpr src_cpr src_org     cor
  :   <chr>  <chr>   <chr>     <dbl>
  : 1 PC1    all     woclosed -0.998
  : 2 PC2    all     woclosed -0.988

-> correlations of loadings are super high: 0.99, 0.98




next: compare scores:

#+begin_src R :exports results :results output
## compare scores
dt_pca_cpr_scores <- map2(list(l_pca_dimred, l_pca_dimred_woclosed), list("all", "woclosed"),
                          ~chuck(.x, "dt_scores")[, src := .y]) %>% rbindlist %>%
                     dcast(ID + museum_status ~ src, value.var  = c("PC1", "PC2")) 

## correlation of scores are pretty high too: 0.99
dt_pca_cpr_scores[, .SD, .SDcols = patterns("^PC")] %>% cor(use = "complete.obs") %>%
    multiply_by(lower.tri(.)) %>% # only keep one side
  adt(keep.rownames = "PC") %>%
  melt(id.vars = "PC", measure.vars = measure(PC_cpr, src_cpr, sep = "_"), value.name = "cor") %>% 
  .[cor != 0] %>% 
  .[, c("PC_org", "src_org") := tstrsplit(PC, "_")] %>%
  .[PC_org == PC_cpr & src_org != src_cpr, .(PC_cpr, src_cpr, src_org, cor = round(cor, 3))]

#+end_src

#+RESULTS[eefa7ec7253b325e5e631eea590a2effdd8beae8]:
: # A data frame: 2 × 4
:   PC_cpr src_cpr src_org     cor
:   <chr>  <chr>   <chr>     <dbl>
: 1 PC1    all     woclosed -0.999
: 2 PC2    all     woclosed -0.998

also super high: 0.99 for both PC1 and PC2

look at scores: 

#+name: p_cpr_scores_scat
#+begin_src R :exports results :results output graphics file :file p_cpr_scores_scat.pdf :width 7 :height 4

## https://cran.r-project.org/web/packages/data.table/vignettes/datatable-reshape.html
## somehow using sep + cols doesn't work -> have to use pattern, which does work: 
## this doesn't work
## melt(dt_pca_cpr_scores, id.vars =  c("ID", "museum_status"),
##      measure.vars = measure(value.name, src, sep = "_",
##                             cols = c("PC1_all", "PC1_woclosed","PC2_all", "PC2_woclosed")))

melt(dt_pca_cpr_scores, id.vars =  c("ID", "museum_status"),
     measure.vars = measure(value.name, src, pattern = "(PC.*)_(.*)")) %>%
    .[src == "woclosed" , `:=`(PC1 = PC1*-1, PC2 = PC2 *-1)] %>% 
    ggplot(aes(x=PC1, y=PC2, color = museum_status)) +
    geom_jitter(width = 0.3, height = 0.3, size = 0.5) + 
    facet_wrap(~src, scales = "free") +
    theme(legend.position = "bottom")

#+end_src

#+attr_latex: :width 7in
#+RESULTS[351fa32b05670e51c4ca4214e2fd4121ac549531]: p_cpr_scores_scat
[[file:/home/johannes/Dropbox/phd/papers/closing/notes/dimred/p_cpr_scores_scat.pdf]]


very similar: in both cases, closed ones at bottom left

look at changes within museums: end of tip is woclosed position

#+name: p_cpr_scores_diff
#+begin_src R :exports results :results output graphics file :file p_cpr_scores_diff.pdf :width 7 :height 4
p_cpr_scores_diff <- ggplot(dt_pca_cpr_scores,
                            aes(x=PC1_all, y=PC2_all, xend = PC1_woclosed*-1, yend = PC2_woclosed*-1,
                                color = museum_status)) +
  geom_point(position = position_jitter(width = 0.2, height = 0.2, seed = 10), show.legend = F, size = 0.2) + 
  geom_segment(arrow = arrow(length = unit(0.1, "cm")),
               linewidth = 0.3,
               alpha = 0.7,
               position = position_jitter(width = 0.2, height = 0.2, seed = 10))


p_cpr_scores_diff + (p_cpr_scores_diff + 
                     coord_cartesian(xlim = c(-2.5, -1.75), ylim = c(-2.5, -2))) +
  plot_layout(guides = "collect") & theme(legend.position = "bottom")

#+end_src

#+attr_latex: :width 7in
#+RESULTS[697fd41a78f0252de91eba7597c014a057bb9dc0]: p_cpr_scores_diff
[[file:/home/johannes/Dropbox/phd/papers/closing/notes/dimred/p_cpr_scores_diff.pdf]]

overall change for each PM isn't so large, most closed PMs still stay at bottom left corner

look at mean scores on principal components by museum_status and PC construction mechanism (all vs woclosed): 

#+name: p_cpr_scores_means
#+begin_src R :exports results :results output graphics file :file p_cpr_scores_means.pdf :width 7 :height 4
melt(dt_pca_cpr_scores, id.vars =  c("ID", "museum_status"),
     measure.vars = measure(PC, src, pattern = "(PC.*)_(.*)")) %>%
    .[src == "woclosed", value := value *-1] %>% 
    .[, .(mean_value = mean(value)), .(PC, museum_status, src)] %>%
    ggplot(aes(x=museum_status, y=mean_value, fill = src, color = src)) +
    geom_col(position = position_dodge()) +
    geom_point(position = position_dodge(width = 1)) +
    geom_text(mapping = aes(label = round(mean_value, digits = 2)), position = position_dodge(width = 1),
              color = "black") + 
    facet_wrap(~PC)

#+end_src

#+attr_latex: :width 7in
#+RESULTS[612b53e97b5c8aa145db25dcfec2ec5f1d415f5c]: p_cpr_scores_means
[[file:/home/johannes/Dropbox/phd/papers/closing/notes/dimred/p_cpr_scores_means.pdf]]

differences between groups by museum_status is much larger than differences between src

*** conclusion
It doesn't really matter for PC loadings/scores whether closed museums are used in PC construction or not

** comparison with size numeric variables

see how well the PCs correlate with other, numeric indicators of size for which there is some data

#+begin_src R :exports none :results none
l_vrbls_size <- .c(clctn_size, staff_size, insta_flwrs, insta_posts, fb_flwrs, fb_likes, google_nbrrvws,
                  trpadvsr_nbrrvws, twitter_flwrs, youtube_flwrs)

## melt size variables into long
dt_pmdb_size_wide <- dt_pmdb[museum_status %in% c("private museum", "closed"), .SD,
        .SDcols = c("ID", "museum_status", l_vrbls_size)] %>% copy() %>%
    .[, staff_size := as.numeric(factor(staff_size, # staff_size has to be recoded
                                        levels = c("1-5 employees", "6-10 employees", "11–20 employees",
                                                   "21–40 employees", "more than 40 employees")))]

dt_pmdb_size_long <- dt_pmdb_size_wide %>%
    melt(id.vars = c("ID", "museum_status"), variable.name = "vrbl_size", value.name = "vlu_size")

## melt PC scores into long
dt_pmdb_pca_long <- melt(dt_pca_cpr_scores, id.vars =  "ID",
                         measure.vars = measure(PC, src, pattern = "(PC.*)_(.*)"),
                         value.name = "vlu_pc") %>%
    .[src == "woclosed", vlu_pc := vlu_pc *-1]
   
## combine both PCA scores and size variable scores with cross join
dt_cpr_size_prep <- merge(dt_pmdb_size_long, dt_pmdb_pca_long, by = "ID", allow.cartesian = T)

dt_cpr_size <- rbind(copy(dt_cpr_size_prep)[, tfm := "orig"],
                     copy(dt_cpr_size_prep)[, `:=`(vlu_size = log(vlu_size), tfm = "log")])

## calculate correlation, p, N for each combination
dt_size_pca_corcoefs <- dt_cpr_size[complete.cases(vlu_size, vlu_pc) & !is.infinite(vlu_size),
                                    cor.test(vlu_pc, vlu_size) %$% list(r = estimate, p = p.value, N = .N),
                                    .(vrbl_size, PC, src, tfm)] %>%
    .[, label := sprintf("r=%s%s, N=%s", format(round(r, 2), digits = 2, nsmall = 2),
                         fmt_pvlu(p) %>% substr(3, nchar(.)-1), N), .I]
#+end_src




#+name: p_sizecor
#+begin_src R :exports results :results output graphics file :file p_sizecor.pdf :width 7 :height 9


## plot on original size variables
p_sizecor_orig <- dt_cpr_size[tfm == "orig" & src == "all"] %>% 
    ggplot(aes(x=vlu_pc, y=vlu_size)) +
    geom_point(size = 0.1, color = "gray20", alpha = 0.5) +
    geom_smooth(method = "lm") + 
    facet_grid(vrbl_size ~ PC, scales = "free") +
    geom_text(dt_size_pca_corcoefs[tfm == "orig" & src == "all"], mapping = aes(x=Inf, y=Inf,
                                                  label = label),
              hjust = 1.05, vjust = 1.5)

## plot on log-scaled size variables
p_sizecor_log <- dt_cpr_size[tfm == "log" & src == "all"] %>% 
    ggplot(aes(x=vlu_pc, y=vlu_size)) +
    geom_point(size = 0.1, color = "gray20", alpha= 0.5) +
    geom_smooth(method = "lm") + 
    facet_grid(vrbl_size ~ PC, scales = "free") +
    geom_text(dt_size_pca_corcoefs[tfm == "log" & src == "all"], mapping = aes(x=Inf, y=Inf,
                                                  label = label),
              hjust = 1.05, vjust = 1.5)
## p_sizecor_log

p_sizecor_orig + p_sizecor_log

#+end_src

#+attr_latex: :width 7in
#+RESULTS[78b12bb1033a0f0989e15dc9c1aab79f5e74c781]: p_sizecor
[[file:/home/johannes/Dropbox/phd/papers/closing/notes/dimred/p_sizecor.pdf]]

#+name: p_sizecor_col
#+begin_src R :exports results :results output graphics file :file p_sizecor_col.pdf :width 7 :height 3.5
ggplot(dt_size_pca_corcoefs, aes(x=r, y=vrbl_size, color = tfm, shape = src, size = N)) + geom_point() +
    facet_grid(~PC) +
    scale_shape_manual(values = c(23,22)) +
    scale_size_continuous(range = c(3,7))

#+end_src

#+attr_latex: :width 7in
#+RESULTS[be3d44a7aebb2d85dfaeaa3c9044b13a1eff7fbc]: p_sizecor_col
[[file:/home/johannes/Dropbox/phd/papers/closing/notes/dimred/p_sizecor_col.pdf]]

quite some substantial correlations, especially with PC1 -> good evidence that PC1 measures something like size/capabilities/outreach/diversification

** regression model

#+begin_src R :exports none :results none
c_lvrs <- list(
    dtti = c("af_size"),
    ## dtti = c(""),
    af_vrbls = c("exhbany", "exhbrollany"))

dt_pmx <- gd_pmx(dt_pmdb)
l_pca_dimred_woclosed <- gl_pca_dimred_closed_imputed(dt_pmdb, dt_pmx)

dt_pmtiv <- gd_pmtiv(dt_pmx, l_pca_dimred_woclosed) # time invariant variables


dt_pmyear_prep <- gd_pmyear_prep(dt_pmx, dt_pmtiv, c_lvrs) # combine all data sources, as complete as possible
dt_pmyear <- gd_pmyear(dt_pmyear_prep, c_lvrs) # trim down dt to no NAs


l_mdls <- list(
  ## r_pop4 = coxph(Surv(tstart, tstop, closing) ~ gender + pmdens_cry + I(pmdens_cry^2) + 
  ##                   slfidfcn + founder_dead + muem_fndr_name + an_inclusion + exhbany + 
  ##                   proxcnt10*popm_circle10 + covid + recession,
  ##                dt_pmyear),
  r_pop4 = coxph(gf_coxph_close(), dt_pmyear),
  
  
  ## r_wsize1 = coxph(Surv(tstart, tstop, closing) ~ gender + pmdens_cry + I(pmdens_cry^2) + 
  ##                    slfidfcn + founder_dead + muem_fndr_name + an_inclusion + exhbany + 
  ##                    proxcnt10*popm_circle10 + PC1 +  covid + recession,
  ##                  dt_pmyear),
  r_wsize1 = coxph(gf_coxph_close(vrbls_to_add = "PC1"), dt_pmyear),
  

  ## r_wsize2 = coxph(Surv(tstart, tstop, closing) ~ gender + pmdens_cry + I(pmdens_cry^2) + 
  ##                     slfidfcn + founder_dead + muem_fndr_name + an_inclusion + exhbany + 
  ##                     proxcnt10*popm_circle10 + PC2 + covid + recession ,
  ##                  dt_pmyear),

  r_wsize2 = coxph(gf_coxph_close(vrbls_to_add = c("PC2")), dt_pmyear),
  
  ## r_wsize3 = coxph(Surv(tstart, tstop, closing) ~ gender + pmdens_cry + I(pmdens_cry^2) + 
  ##                     slfidfcn + founder_dead + muem_fndr_name + an_inclusion + exhbany + 
  ##                     proxcnt10*popm_circle10 + PC1 + PC2 + covid + recession,
  ##                  dt_pmyear)

  r_wsize3 = coxph(gf_coxph_close(vrbls_to_add = c("PC1", "PC2")), dt_pmyear)

)

gt_reg_coxph_dimred <- gt_reg_coxph



l_mdlnames_dimred <- c("r_pop4", paste0("r_wsize", 3:1))

gc_plts <- function() {}

## overwrite the gc_tbls, c_tblargs
gc_tbls <- function() {
  list(t_reg_coxph_dimred = list(
         l_mdls = quote(l_mdls),
         l_mdlnames = quote(l_mdlnames_dimred),
         caption = "reg results"))
}
c_tblargs <- list()
l_tbls <- list()

## gt_reg_coxph_dimred(l_mdls, l_mdlnames_coxph)
gtbl("t_reg_coxph_dimred")
wtbl("t_reg_coxph_dimred")
## wtbl(


#+end_src

#+INCLUDE: /home/johannes/Dropbox/phd/papers/closing/tables/t_reg_coxph_dimred_wcpF.tex export latex

Whether or not the principal components are included matters somewhat:
- the main variables that were significant before (self-identification as other), nbr PM within 10km, and its interaction with population, are not much changed.
- MOW is not significant anymore when both PCs are included,
- PC inclusion also make smain effect of population insignificant (but that doesn't matter much for proximity cound effect, see predicted probabilities of different models)
- including both PCs makes "founder died" significant



#+name: p_pred_dimred
#+begin_src R :exports results :results output graphics file :file pred_dimred.pdf :width 7 :height 5.5
gp_pred_popprxcnt(l_mdlnames_dimred, l_mdls, dt_pmyear) + theme(legend.position = "bottom")
#+end_src

#+attr_latex: :width 7in
#+RESULTS[53264d1925b1abf790a14ecdf0cc3a0f6ebb1f10]: p_pred_dimred
[[file:/home/johannes/Dropbox/phd/papers/closing/notes/dimred/pred_dimred.pdf]]



#+latex: \FloatBarrier

** conclusion overall

- Even if PC1 measures size, this doesn't mean that the data for closed museums has been properly collected
- even if the "logic" (factor loadings) is right, the variable coverage of closed museums is just pretty bad -> PC1 scores for closed museums could be lower than they should be
- it very much boils down to intuition whether the concentration of the closed museums at the lower ends is too big to be real











